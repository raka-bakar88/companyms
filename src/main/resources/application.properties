jobms.url=http://localhost:8082
reviewms.url=http://localhost:8083
companyms.url=http://localhost:8081

spring.application.name=companyms
server.port=8081


# H2 DB
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:test
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.hibernate.ddl-auto=update

# PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/company
spring.datasource.username=raka
spring.datasource.password=password
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#eureka
#line below to register to the eureka server. we have to provide the url
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#line below to set if this application can be registered to Eureka
eureka.client.register-with-eureka=true
#line below is to fetch the registry
# should set false because a eureka server does not need to fetch the registry
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost

#zipkin
# 1.0 will trace ALL requests, it will slow down. you can lower the setting
management.tracing.sampling.probability=1.0
# we can also trace only a specific endpoints by using below
# management.zipkin.tracing.endpoint=

# ConfigServer
#set the url of the config server, optional mean if the config server is down, the app will still run
spring.config.import=optional:configserver:http://localhost:8080
#select the profiles of the config
#spring.profiles.active=dev

# RabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest